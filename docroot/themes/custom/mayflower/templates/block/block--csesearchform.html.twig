{#
/**
 * @file
 * Theme override for the search form block -- for header search form.
 *
 * Available variables:
 * - plugin_id: The ID of the block implementation.
 * - label: The configured label of the block if visible.
 * - configuration: A list of the block's configuration values, including:
 *   - label: The configured label for the block.
 *   - label_display: The display settings for the label.
 *   - provider: The module or other provider that provided this block plugin.
 *   - Block plugin specific settings will also be stored here.
 * - content: The content of this block.
 * - attributes: A list HTML attributes populated by modules, intended to
 *   be added to the main container tag of this template. Includes:
 *   - id: A valid HTML ID and guaranteed unique.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 *
 * @see template_preprocess_block()
 * @see search_preprocess_block()
 */
#}
{%
  set classes = [
    'block',
    'block-search',
    'container-inline',
    'ma__header__search',
    'js-header-search-menu',
  ]
%}
<div{{ attributes.addClass(classes) }}>
  <section class='ma__header-search'>
    {% block content %}
      {# desktop header google custom search form. id selector used in API .draw() method at last line of api embed js below #}
      <div id="cse-header-search-form" style="width: 100%;">Loading</div>

      {# mobile-only faux search button that opens mobile menu on click #}
      <button class="ma__button-search">
        <span>Search</span>
        <svg role="img" class="ma__button-search__icon">
          <use xlink:href="/{{directory}}/images/svg-sprite.svg#search"></use>
        </svg>
      </button>
      <script type="text/javascript">
        (function(){
          // ****** Mobile Search button should open mobile menu ******
          var mobileSearchButton = document.querySelector(".ma__header__search .ma__header-search .ma__button-search");

          if(null !== mobileSearchButton){
            mobileSearchButton.addEventListener("click", function(event) {
              event.preventDefault();
              document.querySelector("body").classList.toggle("show-menu");
            });
          }
        })();
      </script>
      {# common search form styles live in templates/includes/
           block--csesearchform--mobile #}
    {% endblock %}
  </section>
</div><!-- .ma__header__search -->
